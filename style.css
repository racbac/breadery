/*!
Theme Name: breadery
Theme URI: http://underscores.me/
Author: Rachel Backert
Author URI: http://www.rachelbackert.com
Description: Redesign of breaderyonline.com
Version: 1.0.0
License: GNU General Public License v2 or later
License URI: LICENSE
Text Domain: breadery
Tags: custom-background, custom-logo, custom-menu, featured-images, threaded-comments, translation-ready

This theme, like WordPress, is licensed under the GPL.
Use it to make something cool, have fun, and share what you've learned with others.

breadery is based on Underscores https://underscores.me/, (C) 2012-2017 Automattic, Inc.
Underscores is distributed under the terms of the GNU GPL v2 or later.

Normalizing styles have been helped along thanks to the fine work of
Nicolas Gallagher and Jonathan Neal https://necolas.github.io/normalize.css/
*/
/*
 * Social Network coloring
 * Provides variables containing social network's brand colors.
 * Generates CSS rules to apply brand colors according to their classes.
 */
/*
 * Social network color variables
 */
/* 
 * Rule generator
 * Generates CSS rules that applies brand color to a CSS property based on element's classes.
 * .brand-color             | always required
 * .bg and .fg              | apply brand color to 'color' and 'background-color' properties, respectively
 * .bg-hover and .fg-hover  | apply the brand color to prefix's property when element is hovered
 */
.brand-color.bg-hover:hover[class*=facebook] {
  background-color: #3b5998; }

.brand-color.bg-hover:hover[class*=twitter] {
  background-color: #1da1f2; }

.brand-color.bg-hover:hover[class*=youtube] {
  background-color: #ff0000; }

.brand-color.bg-hover:hover[class*=instagram] {
  background-color: #c32aa3; }

.brand-color.bg-hover:hover[class*=google] {
  background-color: #ea4335; }

.brand-color.bg-hover:hover[class*=pinterest] {
  background-color: #bd081c; }

.brand-color.bg-hover:hover[class*=googleplus] {
  background-color: #db4437; }

.brand-color.bg-hover:hover[class*=linkedin] {
  background-color: #007bb5; }

.brand-color.bg-hover:hover[class*=vimeo] {
  background-color: #1ab7ea; }

.brand-color.bg-hover:hover[class*=tumblr] {
  background-color: #2c4762; }

.brand-color.bg-hover:hover[class*=snapchat] {
  background-color: #fffc00; }

.brand-color.bg-hover:hover[class*=whatsapp] {
  background-color: #25d366; }

.brand-color.bg-hover:hover[class*=mastodon] {
  background-color: #2b90d9; }

.brand-color.bg-hover:hover[class*=apple] {
  background-color: #a6b1b7; }

.brand-color.bg-hover:hover[class*=amazon] {
  background-color: #ff9900; }

.brand-color.bg-hover:hover[class*=microsoft] {
  background-color: #03a5f0; }

.brand-color.bg-hover:hover[class*=periscope] {
  background-color: #40a4c4; }

.brand-color.bg-hover:hover[class*=foursquare] {
  background-color: #f94877; }

.brand-color.bg-hover:hover[class*=swarm] {
  background-color: #ffa633; }

.brand-color.bg-hover:hover[class*=medium] {
  background-color: #02b875; }

.brand-color.bg-hover:hover[class*=skype] {
  background-color: #00aff0; }

.brand-color.bg-hover:hover[class*=android] {
  background-color: #a4c639; }

.brand-color.bg-hover:hover[class*=stumbleupon] {
  background-color: #e94826; }

.brand-color.bg-hover:hover[class*=flickr] {
  background-color: #006add; }

.brand-color.bg-hover:hover[class*=yahoo] {
  background-color: #430297; }

.brand-color.bg-hover:hover[class*=twitch] {
  background-color: #6441a4; }

.brand-color.bg-hover:hover[class*=soundcloud] {
  background-color: #ff5500; }

.brand-color.bg-hover:hover[class*=spotify] {
  background-color: #20B954; }

.brand-color.bg-hover:hover[class*=dribbble] {
  background-color: #ea4c89; }

.brand-color.bg-hover:hover[class*=slack] {
  background-color: #4a154b; }

.brand-color.bg-hover:hover[class*=reddit] {
  background-color: #ff5700; }

.brand-color.bg-hover:hover[class*=deviantart] {
  background-color: #05cc47; }

.brand-color.bg-hover:hover[class*=pocket] {
  background-color: #ee4056; }

.brand-color.bg-hover:hover[class*=quora] {
  background-color: #aa2200; }

.brand-color.bg-hover:hover[class*=slideshare] {
  background-color: #e68523; }

.brand-color.bg-hover:hover[class*=fivehundredpx] {
  background-color: #0099e5; }

.brand-color.bg-hover:hover[class*=vk] {
  background-color: #4a76a8; }

.brand-color.bg-hover:hover[class*=listly] {
  background-color: #df6d46; }

.brand-color.bg-hover:hover[class*=vine] {
  background-color: #00b489; }

.brand-color.bg-hover:hover[class*=steam] {
  background-color: #171a21; }

.brand-color.bg-hover:hover[class*=discord] {
  background-color: #7289da; }

.brand-color.bg-hover:hover[class*=telegram] {
  background-color: #0088cc; }

.brand-color.bg-hover:hover[class*=clarity] {
  background-color: #61bed9; }

.brand-color.bg-hover:hover[class*=rss] {
  background-color: #FA9C39; }

.brand-color.bg[class*=facebook] {
  background-color: #3b5998; }

.brand-color.bg[class*=twitter] {
  background-color: #1da1f2; }

.brand-color.bg[class*=youtube] {
  background-color: #ff0000; }

.brand-color.bg[class*=instagram] {
  background-color: #c32aa3; }

.brand-color.bg[class*=google] {
  background-color: #ea4335; }

.brand-color.bg[class*=pinterest] {
  background-color: #bd081c; }

.brand-color.bg[class*=googleplus] {
  background-color: #db4437; }

.brand-color.bg[class*=linkedin] {
  background-color: #007bb5; }

.brand-color.bg[class*=vimeo] {
  background-color: #1ab7ea; }

.brand-color.bg[class*=tumblr] {
  background-color: #2c4762; }

.brand-color.bg[class*=snapchat] {
  background-color: #fffc00; }

.brand-color.bg[class*=whatsapp] {
  background-color: #25d366; }

.brand-color.bg[class*=mastodon] {
  background-color: #2b90d9; }

.brand-color.bg[class*=apple] {
  background-color: #a6b1b7; }

.brand-color.bg[class*=amazon] {
  background-color: #ff9900; }

.brand-color.bg[class*=microsoft] {
  background-color: #03a5f0; }

.brand-color.bg[class*=periscope] {
  background-color: #40a4c4; }

.brand-color.bg[class*=foursquare] {
  background-color: #f94877; }

.brand-color.bg[class*=swarm] {
  background-color: #ffa633; }

.brand-color.bg[class*=medium] {
  background-color: #02b875; }

.brand-color.bg[class*=skype] {
  background-color: #00aff0; }

.brand-color.bg[class*=android] {
  background-color: #a4c639; }

.brand-color.bg[class*=stumbleupon] {
  background-color: #e94826; }

.brand-color.bg[class*=flickr] {
  background-color: #006add; }

.brand-color.bg[class*=yahoo] {
  background-color: #430297; }

.brand-color.bg[class*=twitch] {
  background-color: #6441a4; }

.brand-color.bg[class*=soundcloud] {
  background-color: #ff5500; }

.brand-color.bg[class*=spotify] {
  background-color: #20B954; }

.brand-color.bg[class*=dribbble] {
  background-color: #ea4c89; }

.brand-color.bg[class*=slack] {
  background-color: #4a154b; }

.brand-color.bg[class*=reddit] {
  background-color: #ff5700; }

.brand-color.bg[class*=deviantart] {
  background-color: #05cc47; }

.brand-color.bg[class*=pocket] {
  background-color: #ee4056; }

.brand-color.bg[class*=quora] {
  background-color: #aa2200; }

.brand-color.bg[class*=slideshare] {
  background-color: #e68523; }

.brand-color.bg[class*=fivehundredpx] {
  background-color: #0099e5; }

.brand-color.bg[class*=vk] {
  background-color: #4a76a8; }

.brand-color.bg[class*=listly] {
  background-color: #df6d46; }

.brand-color.bg[class*=vine] {
  background-color: #00b489; }

.brand-color.bg[class*=steam] {
  background-color: #171a21; }

.brand-color.bg[class*=discord] {
  background-color: #7289da; }

.brand-color.bg[class*=telegram] {
  background-color: #0088cc; }

.brand-color.bg[class*=clarity] {
  background-color: #61bed9; }

.brand-color.bg[class*=rss] {
  background-color: #FA9C39; }

.brand-color.fg[class*=facebook] {
  color: #3b5998; }

.brand-color.fg[class*=twitter] {
  color: #1da1f2; }

.brand-color.fg[class*=youtube] {
  color: #ff0000; }

.brand-color.fg[class*=instagram] {
  color: #c32aa3; }

.brand-color.fg[class*=google] {
  color: #ea4335; }

.brand-color.fg[class*=pinterest] {
  color: #bd081c; }

.brand-color.fg[class*=googleplus] {
  color: #db4437; }

.brand-color.fg[class*=linkedin] {
  color: #007bb5; }

.brand-color.fg[class*=vimeo] {
  color: #1ab7ea; }

.brand-color.fg[class*=tumblr] {
  color: #2c4762; }

.brand-color.fg[class*=snapchat] {
  color: #fffc00; }

.brand-color.fg[class*=whatsapp] {
  color: #25d366; }

.brand-color.fg[class*=mastodon] {
  color: #2b90d9; }

.brand-color.fg[class*=apple] {
  color: #a6b1b7; }

.brand-color.fg[class*=amazon] {
  color: #ff9900; }

.brand-color.fg[class*=microsoft] {
  color: #03a5f0; }

.brand-color.fg[class*=periscope] {
  color: #40a4c4; }

.brand-color.fg[class*=foursquare] {
  color: #f94877; }

.brand-color.fg[class*=swarm] {
  color: #ffa633; }

.brand-color.fg[class*=medium] {
  color: #02b875; }

.brand-color.fg[class*=skype] {
  color: #00aff0; }

.brand-color.fg[class*=android] {
  color: #a4c639; }

.brand-color.fg[class*=stumbleupon] {
  color: #e94826; }

.brand-color.fg[class*=flickr] {
  color: #006add; }

.brand-color.fg[class*=yahoo] {
  color: #430297; }

.brand-color.fg[class*=twitch] {
  color: #6441a4; }

.brand-color.fg[class*=soundcloud] {
  color: #ff5500; }

.brand-color.fg[class*=spotify] {
  color: #20B954; }

.brand-color.fg[class*=dribbble] {
  color: #ea4c89; }

.brand-color.fg[class*=slack] {
  color: #4a154b; }

.brand-color.fg[class*=reddit] {
  color: #ff5700; }

.brand-color.fg[class*=deviantart] {
  color: #05cc47; }

.brand-color.fg[class*=pocket] {
  color: #ee4056; }

.brand-color.fg[class*=quora] {
  color: #aa2200; }

.brand-color.fg[class*=slideshare] {
  color: #e68523; }

.brand-color.fg[class*=fivehundredpx] {
  color: #0099e5; }

.brand-color.fg[class*=vk] {
  color: #4a76a8; }

.brand-color.fg[class*=listly] {
  color: #df6d46; }

.brand-color.fg[class*=vine] {
  color: #00b489; }

.brand-color.fg[class*=steam] {
  color: #171a21; }

.brand-color.fg[class*=discord] {
  color: #7289da; }

.brand-color.fg[class*=telegram] {
  color: #0088cc; }

.brand-color.fg[class*=clarity] {
  color: #61bed9; }

.brand-color.fg[class*=rss] {
  color: #FA9C39; }

.brand-color.fg-hover:hover[class*=facebook] {
  color: #3b5998; }

.brand-color.fg-hover:hover[class*=twitter] {
  color: #1da1f2; }

.brand-color.fg-hover:hover[class*=youtube] {
  color: #ff0000; }

.brand-color.fg-hover:hover[class*=instagram] {
  color: #c32aa3; }

.brand-color.fg-hover:hover[class*=google] {
  color: #ea4335; }

.brand-color.fg-hover:hover[class*=pinterest] {
  color: #bd081c; }

.brand-color.fg-hover:hover[class*=googleplus] {
  color: #db4437; }

.brand-color.fg-hover:hover[class*=linkedin] {
  color: #007bb5; }

.brand-color.fg-hover:hover[class*=vimeo] {
  color: #1ab7ea; }

.brand-color.fg-hover:hover[class*=tumblr] {
  color: #2c4762; }

.brand-color.fg-hover:hover[class*=snapchat] {
  color: #fffc00; }

.brand-color.fg-hover:hover[class*=whatsapp] {
  color: #25d366; }

.brand-color.fg-hover:hover[class*=mastodon] {
  color: #2b90d9; }

.brand-color.fg-hover:hover[class*=apple] {
  color: #a6b1b7; }

.brand-color.fg-hover:hover[class*=amazon] {
  color: #ff9900; }

.brand-color.fg-hover:hover[class*=microsoft] {
  color: #03a5f0; }

.brand-color.fg-hover:hover[class*=periscope] {
  color: #40a4c4; }

.brand-color.fg-hover:hover[class*=foursquare] {
  color: #f94877; }

.brand-color.fg-hover:hover[class*=swarm] {
  color: #ffa633; }

.brand-color.fg-hover:hover[class*=medium] {
  color: #02b875; }

.brand-color.fg-hover:hover[class*=skype] {
  color: #00aff0; }

.brand-color.fg-hover:hover[class*=android] {
  color: #a4c639; }

.brand-color.fg-hover:hover[class*=stumbleupon] {
  color: #e94826; }

.brand-color.fg-hover:hover[class*=flickr] {
  color: #006add; }

.brand-color.fg-hover:hover[class*=yahoo] {
  color: #430297; }

.brand-color.fg-hover:hover[class*=twitch] {
  color: #6441a4; }

.brand-color.fg-hover:hover[class*=soundcloud] {
  color: #ff5500; }

.brand-color.fg-hover:hover[class*=spotify] {
  color: #20B954; }

.brand-color.fg-hover:hover[class*=dribbble] {
  color: #ea4c89; }

.brand-color.fg-hover:hover[class*=slack] {
  color: #4a154b; }

.brand-color.fg-hover:hover[class*=reddit] {
  color: #ff5700; }

.brand-color.fg-hover:hover[class*=deviantart] {
  color: #05cc47; }

.brand-color.fg-hover:hover[class*=pocket] {
  color: #ee4056; }

.brand-color.fg-hover:hover[class*=quora] {
  color: #aa2200; }

.brand-color.fg-hover:hover[class*=slideshare] {
  color: #e68523; }

.brand-color.fg-hover:hover[class*=fivehundredpx] {
  color: #0099e5; }

.brand-color.fg-hover:hover[class*=vk] {
  color: #4a76a8; }

.brand-color.fg-hover:hover[class*=listly] {
  color: #df6d46; }

.brand-color.fg-hover:hover[class*=vine] {
  color: #00b489; }

.brand-color.fg-hover:hover[class*=steam] {
  color: #171a21; }

.brand-color.fg-hover:hover[class*=discord] {
  color: #7289da; }

.brand-color.fg-hover:hover[class*=telegram] {
  color: #0088cc; }

.brand-color.fg-hover:hover[class*=clarity] {
  color: #61bed9; }

.brand-color.fg-hover:hover[class*=rss] {
  color: #FA9C39; }

/*--------------------------------------------------------------
# Header
--------------------------------------------------------------*/
.site-header {
  background-color: #294C17; }

.site-branding {
  z-index: 1;
  order: -1;
  align-self: stretch;
  display: flex; }

.site-meta {
  align-self: center; }

.custom-logo-link {
  filter: drop-shadow(0 5px 5px rgba(0, 0, 0, 0.9));
  width: 200px;
  height: auto;
  align-self: flex-end; }

.site-title {
  font-weight: 700;
  font-size: 2.5rem;
  font-family: "Lobster", serif;
  text-align: center;
  margin-bottom: 0; }

.site-description {
  color: black;
  text-align: center; }

@media (min-width: 768px) {
  .custom-logo-link {
    margin-bottom: -20px; } }

/*--------------------------------------------------------------
# Footer
--------------------------------------------------------------*/
.site-footer {
  background-color: #294C17;
  color: rgba(0, 0, 0, 0.7); }
  .site-footer > * {
    margin: 1rem; }
  .site-footer .footer-sidebar {
    margin: -1rem 0 -2rem; }

#footer-menu {
  font-family: "Lato", serif; }

/*--------------------------------------------------------------
# Typography
--------------------------------------------------------------*/
body {
  font-family: "Lato", serif; }

h1, h2, h3, h4, h5, h6, .h1, .h2, .h3, .h4, .h5, .h6 {
  font-family: "EB Garamond", "Georgia", serif; }

h1, h2, .h1, .h2 {
  font-weight: 700; }

h4, h6, .h4, .h6 {
  font-style: italic; }

a {
  text-decoration: none;
  color: #996B0F; }
  a:hover {
    text-decoration: underline dotted;
    color: #b89757; }

.font-primary {
  font-family: "Lobster", serif; }

.font-secondary {
  font-family: "EB Garamond", "Georgia", serif; }

.font-tertiary {
  font-family: "Lato", serif; }

/*--------------------------------------------------------------
# Menus
--------------------------------------------------------------*/
.navbar-nav, .nav {
  margin: initial; }
  .navbar-nav a, .nav a {
    text-decoration: none; }

#primary-menu {
  flex-wrap: wrap; }
  #primary-menu a {
    font-family: "Lobster", serif;
    font-size: 1.5em;
    color: #996B0F;
    transition: color 500ms; }

.main-navigation li {
  margin: 0.5em; }

#primary-menu a {
  display: inline-block;
  position: relative;
  padding-bottom: 2px;
  height: 100%; }

#primary-menu a:after {
  content: '';
  display: block;
  margin: auto;
  height: 2px;
  width: 0;
  border-radius: 1rem;
  background-color: transparent;
  transition: width .5s ease, background-color .3s ease; }

#primary-menu .current-menu-item a::after {
  width: 100%;
  background-color: #996B0F; }

#primary-menu a:hover::after {
  width: 100%;
  background-color: #996B0F; }

#social-menu {
  padding: 0.4rem;
  flex-direction: row; }
  #social-menu a {
    padding: 0;
    font-size: 1.4rem; }

/*--------------------------------------------------------------
# Body
--------------------------------------------------------------*/
html, body {
  height: 100%;
  width: 100%;
  margin: 0;
  padding: 0; }

.site {
  display: flex;
  flex-direction: column;
  height: 100%; }

.site-content {
  flex: 1 0 auto; }
  .site-content:before {
    content: none; }

.site-footer, .site-header {
  flex-shrink: 0; }

body {
  background-color: #9E7945; }

.site-content {
  display: flex;
  justify-content: center;
  align-items: flex-start;
  flex-wrap: wrap; }

.content-area {
  background-color: white;
  flex: 0 1 1000px; }

ul {
  padding-left: 1.5em; }

/*--------------------------------------------------------------
# Posts
--------------------------------------------------------------*/
.entry-title a {
  text-decoration: none;
  color: inherit; }
  .entry-title a:hover {
    color: inherit;
    text-decoration: underline dotted; }

article + hr {
  width: 80%; }

article:last-of-type + hr {
  display: none; }

.entry-header, .page-header {
  text-align: center; }

.entry-header, .entry-content, .entry-footer, .page-header, .entry-summary, .comments-area, .page-content, body.blog .post-thumbnail {
  margin: 2rem 1rem; }

.entry-content p, .entry-content ol, .entry-content li {
  max-width: 50em; }

.entry-meta > span {
  margin-right: 1em; }
  .entry-meta > span i {
    margin-right: 0.5em;
    color: #d6c49f; }
  .entry-meta > span:last-of-type {
    margin-right: 0; }

.post-thumbnail {
  position: relative; }
  .post-thumbnail img {
    width: 100%; }
  .post-thumbnail .img-caption {
    position: absolute;
    bottom: 1rem;
    right: 1rem;
    color: #ccb587;
    font-family: "Lobster", serif; }

.post-navigation .nav-links {
  display: flex;
  flex-wrap: wrap;
  justify-content: center; }
  .post-navigation .nav-links .meta-nav {
    color: #404040;
    text-decoration: underline dotted white; }
  .post-navigation .nav-links .nav-previous a, .post-navigation .nav-links .nav-next a {
    display: inline-block; }
  .post-navigation .nav-links .nav-previous {
    text-align: right;
    margin-right: 2em; }
    .post-navigation .nav-links .nav-previous i {
      margin-right: 0.5em; }
  .post-navigation .nav-links .nav-next i {
    margin-left: 0.5em; }

/*--------------------------------------------------------------
# Components
--------------------------------------------------------------*/
input, label {
  max-width: 100%; }

/*--------------------------------------------------------------
# Images
--------------------------------------------------------------*/
.full-width {
  width: 100%; }
  .full-width img {
    width: 100%; }

.caption {
  font-family: "Lobster", serif;
  font-size: 0.8rem;
  color: #996B0F; }
  .caption.bottom-right {
    position: absolute;
    bottom: 1rem;
    right: 1rem; }
  .caption.bottom-left {
    position: absolute;
    bottom: 1rem;
    left: 1rem; }
  .caption.top-right {
    position: absolute;
    top: 1rem;
    right: 1rem; }
  .caption.top-left {
    position: absolute;
    top: 1rem;
    left: 1rem; }

/*--------------------------------------------------------------
# Widgets
--------------------------------------------------------------*/
#secondary {
  background-color: white;
  overflow-y: auto; }

.widget {
  margin: 1rem; }

.search-form .input-group {
  flex-wrap: nowrap; }

.sidebar-toggler {
  box-shadow: 0 0 0 1px rgba(255, 255, 255, 0.5); }

select[name="archive-dropdown"] {
  width: auto; }

/*--------------------------------------------------------------
# Breakpoints
--------------------------------------------------------------*/
@media (max-width: 575.98px) {
  #secondary {
    display: block !important;
    margin: 1rem; }
  .sidebar-toggler {
    display: none; }
  .sidebar-expand-lg {
    position: static;
    height: auto;
    top: initial;
    right: initial; }
  .site-overlay {
    display: none; } }

@media (min-width: 576px) {
  .entry-header, .entry-content, .entry-footer, .page-header, .entry-summary, .comments-area, .page-content, body.blog .post-thumbnail {
    margin: 2rem 3rem; } }

@media (min-width: 768px) {
  .site-branding {
    order: 0; }
  #site-navigation, #social-navigation {
    flex: 1; } }

@media (min-width: 992px) {
  .site-content {
    flex-wrap: nowrap; }
  #secondary {
    margin: 1rem; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
